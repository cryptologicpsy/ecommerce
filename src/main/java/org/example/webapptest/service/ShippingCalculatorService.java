package org.example.webapptest.service;

import org.springframework.stereotype.Service;
import java.util.Arrays;
import java.util.List;

@Service
public class ShippingCalculatorService {

    // Λίστα με τους ταχυδρομικούς κώδικες για τη Θεσσαλονίκη
	private static final List<String> thessalonikiPostalCodes = Arrays.asList(
	        "53438", "54248", "54249", "54250", "54351", "54352", "54453", "54454", "54500",
	        "54621", "54622", "54623", "54624", "54625", "54626", "54627", "54628", "54629",
	        "54630", "54631", "54632", "54633", "54634", "54635", "54636", "54638", "54639",
	        "54640", "54641", "54642", "54643", "54644", "54645", "54646", "54655", "55131",
	        "55132", "55133", "55134", "55236", "55337", "55438", "55535", "56121", "56122",
	        "56123", "56224", "56334", "56429", "56430", "56431", "56532", "56533", "56625",
	        "56626", "56727", "56728", "57003", "57007", "57010", "57014", "57015", "57016",
	        "57017", "57018", "57020", "57021", "57022", "57100", "57200"
	    );
	
	
    // Λίστα με τους ταχυδρομικούς κώδικες για τα νησιά
    private static final List<String> islandPostalCodes = Arrays.asList(
        "18010", "20001", "20002", "20004", "20006", "20009", "20012", "20013", "20014", "20015", "20016", "20017",
        "20100", "20200", "20300", "20400", "20500", "21051", "21052", "21054", "21055", "21057", "21058", "21059",
        "21060", "21200", "21300", "22001", "22002", "22003", "22004", "22006", "22007", "22008", "22009", "22010",
        "22011", "22013", "22014", "22015", "22017", "22020", "22021", "22022", "22024", "22025", "22026", "22028",
        "22200", "22300", "23051", "23052", "23053", "23054", "23055", "23056", "23058", "23059", "23060", "23061",
        "23062", "23063", "23065", "23066", "23067", "23068", "23070", "23071", "23100", "23200", "24001", "24002",
        "24003", "24004", "24005", "24006", "24008", "24010", "24011", "24013", "24014", "24015", "24017", "24018",
        "24020", "24021", "24022", "24023", "24024", "24300", "24400", "24500", "24600", "25001", "25004", "25006",
        "25007", "25008", "25009", "25010", "25011", "25012", "25013", "25014", "25015", "25016", "25017", "25100",
        "25200", "26500", "27052", "27054", "27056", "27060", "27061", "27062", "27063", "27064", "27065", "27066",
        "27069", "28080", "28081", "28082", "28084", "28085", "28086", "28100", "28200", "28300", "28301", "29091",
        "30001", "30004", "30006", "30008", "30009", "30011", "30015", "30017", "30018", "30019", "30020", "30021",
        "30022", "30023", "30024", "30025", "30026", "30100", "30200", "30300", "30500", "32001", "32003", "32004",
        "32006", "32010", "32100", "32200", "33051", "33053", "33056", "33057", "33058", "33059", "33060", "33061",
        "33062", "33063", "34001", "34003", "34004", "34005", "34006", "34007", "34008", "34009", "34010", "34012",
        "34013", "34014", "34015", "34016", "34018", "34019", "34100", "34200", "34300", "34400", "34500", "35002",
        "35003", "35004", "35005", "35007", "35009", "35010", "35011", "35012", "35013", "35015", "35016", "35017",
        "35018", "35100", "35200", "35300", "36070", "36071", "36072", "36073", "36074", "36076", "36080", "36081",
        "36100", "37001", "37004", "37006", "37007", "37008", "37009", "37012", "37013", "37100", "37500", "38500",
        "40001", "40002", "40003", "40004", "40005", "40006", "40007", "40008", "40100", "40200", "40300", "41500",
        "42032", "42033", "42034", "42035", "42036", "42037", "42200", "42300", "43060", "43061", "43062", "43063",
        "43065", "43066", "43067", "43068", "43069", "43100", "43300", "44001", "44002", "44003", "44004", "44005",
        "44006", "44007", "44008", "44009", "44010", "44012", "44013", "44014", "44015", "44016", "44017", "44018",
        "44019", "44020", "44100", "44200", "45500", "46030", "46031", "46032", "46100", "46200", "46300", "47040",
        "47043", "47044", "47045", "47046", "47047", "47048", "47100", "48060", "48061", "48062", "48100", "48200",
        "48300", "49080", "49081", "49082", "49100", "50001", "50002", "50003", "50004", "50007", "50008", "50400",
        "50500", "51031", "51032", "51100", "51200", "52054", "52055", "52058", "52200", "53070", "53073", "53075",
        "53077", "53200", "57002", "57012", "57014", "57016", "57017", "57021", "57200", "58002", "58003", "58004",
        "58400", "59031", "59032", "59034", "59035", "59100", "59200", "59300", "60061", "60063", "60064", "60065",
        "60100", "61001", "61003", "61005", "61007", "61100", "61200", "61300", "61400", "62041", "62043", "62045",
        "62047", "62049", "62052", "62053", "62055", "62056", "62100", "62300", "63071", "63072", "63073", "63074",
        "63075", "63076", "63077", "63078", "63080", "63081", "63082", "63083", "63084", "63085", "63088", "63100",
        "63200", "64002", "64004", "64005", "64008", "64009", "64011", "64200", "65500", "66033", "66035", "66038",
        "67062", "67300", "68002", "68003", "68005", "68006", "68007", "68009", "68010", "68012", "68013", "68100",
        "68300", "68400", "68500", "69071", "69200", "69300", "69500", "70002", "70003", "70004", "70006", "70009",
        "70010", "70015", "70016", "70300", "72052", "72055", "72056", "72057", "72059", "72300", "72400", "73001",
        "73002", "73003", "73004", "73006", "73007", "73009", "73010", "73011", "73012", "73013", "73400", "74051",
        "74053", "74054", "74055", "74056", "74057", "74059", "74060", "74061", "74062", "74100", "81100", "81101",
        "81102", "81103", "81104", "81105", "81106", "81107", "81108", "81109", "81110", "81112", "81113", "81200",
        "81300", "81401", "81500", "82103", "82104", "82300", "83102", "83103", "83104", "83200", "83300", "83301",
        "83302", "83400", "84300", "84301", "84302", "84500", "84501", "84502", "85001", "85002", "85100", "85102",
        "85106", "85107", "85108", "85109", "85110", "85200", "85301", "85302", "85303", "85700", "85900"
    );

    public double calculateShippingCost(String postalCode, double weight) {
        double baseCost = 0;
        double additionalCostPerKg = 0;
        double baseWeight = 2; // Βάση χρέωσης σε κιλά

        if (thessalonikiPostalCodes.contains(postalCode)) {
            baseCost = 6.80;
            additionalCostPerKg = 2.50;
        } else if (islandPostalCodes.contains(postalCode)) {
            baseCost = 13.90;
            additionalCostPerKg = 4.70;
        } else {
            baseCost = 13.30;
            additionalCostPerKg = 3.40;
        }

        double totalCost = baseCost;
        if (weight > baseWeight) {
            double extraWeight = Math.ceil(weight - baseWeight);
            totalCost += extraWeight * additionalCostPerKg;
        }

        return totalCost;
    }
}
