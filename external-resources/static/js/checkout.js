let basket = JSON.parse(localStorage.getItem('basket')) || [];
let products = [];

const validZipCodes = [
 "10431",
"10564",
"10552",
"10553",
"10432",
"10438",
"10677",
"10433",
"10683",
"10439",
"10682",
"10434",
"10440",
"10437",
"10435",
"10436",
"11855",
"10447",
"10446",
"10445",
"10441",
"10442",
"10444",
"10443",
"11361",
"11252",
"11257",
"11145",
"11854",
"11251",
"11143",
"11253",
"11254",
"10551",
"10554",
"10563",
"10561",
"10559",
"10562",
"10560",
"10555",
"10558",
"10556",
"10557",
"10671",
"10672",
"10673",
"10679",
"10674",
"10675",
"10676",
"11521",
"11634",
"10678",
"10681",
"10680",
"11473",
"11472",
"11141",
"11256",
"11255",
"11364",
"11142",
"11144",
"11146",
"11147",
"11362",
"11551",
"11363",
"11476",
"11454",
"11471",
"11474",
"11475",
"11522",
"11523",
"11526",
"11524",
"11525",
"11528",
"11527",
"11533",
"11631",
"11636",
"11632",
"11633",
"11635",
"11741",
"11742",
"11743",
"11745",
"11744",
"11835",
"11851",
"11852",
"11853",
"12131",
"12242",
"12134",
"12132",
"12133",
"12136",
"12135",
"12137",
"12141",
"12241",
"12243",
"12244",
"12351",
"12461",
"12462",
"13122",
"13121",
"13123",
"13341",
"13231",
"13451",
"13675",
"13671",
"13561",
"13562",
"13674",
"13673",
"13672",
"13677",
"14121",
"14122",
"14123",
"14452",
"14231",
"14233",
"14234",
"14232",
"14235",
"14341",
"14342",
"14343",
"14451",
"14561",
"14562",
"14564",
"14563",
"14574",
"14578",
"14568",
"14572",
"14576",
"14565",
"14671",
"14569",
"15121",
"15122",
"15123",
"15124",
"15125",
"15126",
"15233",
"15127",
"15231",
"15232",
"15234",
"15235",
"15236",
"15237",
"15341",
"15342",
"15343",
"15344",
"15354",
"15351",
"15238",
"15451",
"15452",
"15561",
"15562",
"15669",
"17563",
"15771",
"15773",
"15772",
"16121",
"16122",
"16231",
"16232",
"16233",
"16342",
"16341",
"16346",
"16343",
"16345",
"16344",
"16450",
"16452",
"16451",
"16552",
"16562",
"16561",
"16675",
"16674",
"16777",
"16671",
"16672",
"16673",
"17121",
"17123",
"17124",
"17122",
"17564",
"17232",
"17234",
"17235",
"17237",
"17236",
"17341",
"17343",
"17342",
"17455",
"17456",
"17561",
"17562",
"17672",
"17671",
"17673",
"17674",
"17675",
"17676",
"17778",
"15349",
"18758",
"18648",
"18755",
"18756",
"18543",
"18863",
"18451",
"18757",
"18233",
"18535",
"18532",
"18531",
"18542",
"18450",
"18120",
"18345",
"18122",
"18452",
"18533",
"18541",
"18344",
"18454",
"18544",
"18539",
"18453",
"18545",
"18546",
"18547",
"18540",
"18121",
"18537",
"18346",
"18536",
"18534",
"18538",
"54643",
"54635",
"55131",
"56224",
"54351",
"54625",
"56727",
"56429",
"56430",
"54634",
"56533",
"54636",
"54629",
"56123",
"54352",
"55438",
"54453",
"54628",
"54621",
"54622",
"38446",
"38445",
"38334",
"38222",
"38333",
"38221",
"38500",
"38322",
"8446",
"38331",
"38300",
"41334",
"41222",
"41335",
"41447",
"41336",
"41221",
"41223",
"71601",
"71409",
"71201",
"71410",
"71304",
"71307",
"71202",
"71500",
"71305",
"71306",
"71303",
"71309",
"73131",
"73300",
"73136",
"73132",
"73133",
"73134",
"73135",
"73100",
"65403",
"45332",
"45221",
"45444",
"45333",
"45445",
"45232",
"45442",
"65302",
"65201",
"65404",
"26331",
"26332",
"26500",
"26333",
"26442",
"26443",
"26441",
"26334",
"26225",
"26223",
"26335",
"26221",
"26222",
"26226",
"26234",
"26224",
"26444",
"62125",
"62124",
"62122",
"62123",
"62121",
"56122",
"54250",
"55132",
"56121",
"54623",
"56532",
"54632",
"56431",
"54631",
"54633",
"54640",
"55133",
"56334",
"55236",
"54630",
"54638",
"56625",
"54655",
"54624",
"55337",
"54642",
"55134",
"56626",
"54627",
"54248",
"54454",
"56728",
"54249",
"54639",
"54645",
"54646",
"54644",
"54641",
"54626",
"55535",
"57001",
"53438",
"41500",
"30008",
"30021",
"30400",
"30002",
"30010",
"30011",
"30026",
"30500",
"30015",
"30014",
"30100",
"30025",
"30200",
"30027",
"30017",
"30004",
"30020",
"30009",
"30006",
"30018",
"30023",
"30300",
"30019",
"30024",
"30022",
"47040",
"30001",
"33059",
"30005",
"30214",
"30007",
"30016",
"30013",
"30012",
"30003",
"31100",
"21051",
"21100",
"21055",
"21052",
"21060",
"21200",
"20500",
"21300",
"21057",
"21054",
"21058",
"21059",
"21053",
"21056",
"22028",
"22011",
"22012",
"22001",
"22007",
"22006",
"22300",
"22100",
"25012",
"22003",
"22009",
"22027",
"22010",
"22002",
"22021",
"22200",
"22013",
"22014",
"22022",
"22025",
"22015",
"22008",
"22016",
"22017",
"22018",
"22004",
"22020",
"27061",
"22026",
"22024",
"22005",
"25004",
"22019",
"47045",
"47100",
"47048",
"47044",
"47047",
"47043",
"47046",
"48200",
"44001",
"47041",
"47200",
"47042",
"80100",
"80200",
"19015",
"18020",
"19016",
"18010",
"19007",
"19003",
"19013",
"18050",
"19014",
"18030",
"18900",
"19400",
"19004",
"19500",
"19002",
"19600",
"19100",
"19012",
"18902",
"19300",
"19011",
"19001",
"18040",
"19009",
"19200",
"19008",
"13501",
"13676",
"19010",
"19006",
"19005",
"18901",
"25015",
"25100",
"25006",
"25008",
"25200",
"25007",
"26504",
"25016",
"25010",
"25002",
"27052",
"25013",
"25003",
"25001",
"25014",
"25005",
"25009",
"25011",
"25017",
"25018",
"32100",
"32001",
"32003",
"32300",
"32200",
"32007",
"32009",
"32012",
"32010",
"35015",
"32004",
"32002",
"32008",
"32011",
"32005",
"32006",
"35004",
"51032",
"51100",
"51030",
"51200",
"50007",
"51031",
"50004",
"66200",
"66031",
"66300",
"66032",
"66100",
"66035",
"66037",
"66033",
"66038",
"66034",
"66036",
"62045",
"85001",
"85106",
"85800",
"85400",
"85002",
"85300",
"85108",
"85700",
"85109",
"85110",
"85900",
"85302",
"85200",
"85102",
"85303",
"85103",
"85500",
"85600",
"85101",
"85105",
"85301",
"84008",
"85100",
"85104",
"85401",
"85107",
"85111",
"68100",
"68010",
"68400",
"68011",
"68002",
"68006",
"68004",
"68200",
"68500",
"68007",
"68300",
"69300",
"68013",
"68005",
"68012",
"68008",
"68003",
"68001",
"68009",
"68014",
"34200",
"34001",
"34010",
"34014",
"34009",
"34100",
"34400",
"34008",
"34017",
"34300",
"34018",
"34016",
"34500",
"34013",
"34015",
"34007",
"34019",
"34006",
"34003",
"34002",
"34004",
"34005",
"34600",
"34012",
"34011",
"36100",
"36081",
"36070",
"36071",
"36072",
"36073",
"36074",
"36080",
"36075",
"36076",
"43100",
"29092",
"29091",
"29090",
"29100",
"27064",
"27063",
"27300",
"27069",
"27100",
"27053",
"27067",
"27060",
"27065",
"27062",
"27054",
"27200",
"27058",
"27051",
"27066",
"27050",
"27055",
"27068",
"27056",
"27057",
"27059",
"59034",
"59100",
"59031",
"59200",
"59300",
"59032",
"59035",
"59033",
"70005",
"70010",
"70003",
"70004",
"70006",
"70300",
"70100",
"70012",
"70400",
"70008",
"70200",
"70009",
"70013",
"70014",
"74051",
"70016",
"70011",
"70015",
"70002",
"70017",
"70001",
"70007",
"46200",
"44017",
"46100",
"46032",
"46300",
"46030",
"46033",
"46031",
"48060",
"57019",
"57500",
"57003",
"57006",
"57200",
"57021",
"57012",
"57011",
"57007",
"57300",
"57016",
"57014",
"57020",
"57002",
"57010",
"54500",
"57017",
"57013",
"57008",
"57009",
"57100",
"57018",
"57015",
"57004",
"57400",
"45500",
"44100",
"44014",
"44002",
"44008",
"44200",
"44009",
"44004",
"44013",
"44012",
"44016",
"44015",
"44003",
"44007",
"44019",
"44018",
"44010",
"44020",
"44005",
"44006",
"48061",
"64200",
"64011",
"65500",
"64007",
"64002",
"64010",
"64009",
"64001",
"64003",
"64008",
"64004",
"64100",
"64012",
"64006",
"64005",
"43300",
"43061",
"43064",
"43065",
"43200",
"43069",
"43068",
"43062",
"43060",
"43063",
"43066",
"43067",
"43070",
"52051",
"52050",
"52055",
"52200",
"52052",
"52058",
"52100",
"52053",
"52059",
"52057",
"52054",
"52056",
"49100",
"49081",
"49080",
"49084",
"49083",
"49082",
"28086",
"28081",
"28200",
"28100",
"28300",
"28080",
"28084",
"28082",
"28085",
"28083",
"28301",
"61002",
"61003",
"61100",
"61006",
"61400",
"61200",
"61300",
"61005",
"61007",
"58003",
"61001",
"50400",
"50100",
"50002",
"50200",
"50001",
"50010",
"50005",
"50008",
"50500",
"50009",
"50300",
"50003",
"50006",
"20004",
"20006",
"20300",
"20003",
"20008",
"20100",
"20005",
"20014",
"20400",
"20009",
"20013",
"20007",
"20200",
"20017",
"20002",
"20015",
"20016",
"20001",
"20010",
"20011",
"20012",
"84200",
"84301",
"84300",
"84006",
"84001",
"84401",
"84502",
"84002",
"84003",
"84700",
"84302",
"84800",
"84011",
"84703",
"84004",
"84005",
"84501",
"84400",
"84600",
"84702",
"84100",
"84801",
"84500",
"84010",
"84009",
"84007",
"84201",
"84701",
"23052",
"23200",
"23063",
"23100",
"23070",
"23058",
"23053",
"23051",
"23071",
"23055",
"23060",
"23064",
"23068",
"23065",
"23061",
"23054",
"23059",
"23066",
"23062",
"23057",
"23056",
"23067",
"23069",
"40003",
"40300",
"40200",
"37500",
"40007",
"40001",
"40004",
"40100",
"40400",
"40005",
"40006",
"41001",
"40002",
"40008",
"40009",
"35010",
"40010",
"40011",
"72052",
"72400",
"72053",
"72059",
"72200",
"72300",
"72100",
"72055",
"72056",
"72054",
"72057",
"72051",
"72058",
"81200",
"81400",
"81100",
"81102",
"81113",
"81401",
"81101",
"81500",
"81300",
"81104",
"81105",
"81109",
"81103",
"81108",
"81107",
"81110",
"81106",
"81111",
"81112",
"31082",
"31080",
"31083",
"31081",
"37009",
"37008",
"37010",
"37006",
"37200",
"37012",
"37100",
"37011",
"37003",
"37300",
"37005",
"37004",
"37002",
"37001",
"37013",
"37400",
"37007",
"24100",
"24200",
"24021",
"24300",
"24020",
"24022",
"24005",
"24500",
"24004",
"24008",
"24011",
"24024",
"24003",
"24018",
"24023",
"24013",
"24007",
"24010",
"24017",
"24015",
"24002",
"24016",
"24012",
"24400",
"24014",
"24001",
"24006",
"24009",
"24600",
"24019",
"24101",
"67200",
"67061",
"67300",
"67100",
"67062",
"67064",
"67063",
"58400",
"58200",
"58500",
"58002",
"58300",
"58100",
"58004",
"58001",
"58005",
"60100",
"60066",
"60065",
"60300",
"60064",
"60063",
"60061",
"60062",
"60200",
"48300",
"48100",
"48062",
"74054",
"74053",
"74052",
"74056",
"74100",
"74062",
"74059",
"74061",
"74058",
"74060",
"74055",
"74057",
"74000",
"69100",
"69400",
"69200",
"69500",
"83100",
"83302",
"83102",
"83200",
"83301",
"83400",
"83300",
"83103",
"83104",
"83101",
"62047",
"62100",
"62200",
"62051",
"62049",
"62050",
"62300",
"62042",
"62043",
"62052",
"62400",
"62054",
"62053",
"62055",
"62041",
"62048",
"62056",
"62044",
"62046",
"42100",
"42200",
"42037",
"42035",
"42032",
"42033",
"42034",
"42036",
"42300",
"42031",
"42030",
"35009",
"35200",
"35300",
"35100",
"35017",
"35006",
"35003",
"35016",
"35002",
"35014",
"33057",
"35011",
"35008",
"35013",
"35018",
"35005",
"35012",
"35007",
"35001",
"53100",
"53077",
"53200",
"53075",
"53076",
"53070",
"53071",
"53074",
"53073",
"53078",
"53072",
"33053",
"33100",
"33058",
"33050",
"33200",
"33056",
"33063",
"33061",
"33051",
"33052",
"33054",
"33062",
"33055",
"33060",
"63088",
"63081",
"63085",
"63077",
"63078",
"63200",
"63080",
"63073",
"63075",
"63100",
"63074",
"63084",
"63071",
"63087",
"63072",
"63086",
"63076",
"63079",
"63083",
"63082",
"73005",
"73009",
"73001",
"73014",
"73011",
"73008",
"73006",
"73400",
"73004",
"73200",
"73012",
"73010",
"73007",
"73002",
"73003",
"73013",
"82100",
"82103",
"82102",
"82300",
"82104",
"82200",
"82101",
"57022",
"18903",
"71334",
"71414",
"14575",
"1376"
];

function validateEmail(email) {
  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
  return emailPattern.test(email);
}

document.addEventListener('DOMContentLoaded', () => {
  console.log('DOMContentLoaded triggered');
  displayCheckoutProducts();
});

function displayCheckoutProducts() {
  console.log('Displaying checkout products');
  let listCheckout = document.querySelector('.listCheckout');
  let orderSummary = document.querySelector('#order-summary');

  fetch('/products')
    .then(response => response.json())
    .then(data => {
      console.log('Fetched products:', data);
      products = data;

      basket.forEach(item => {
        console.log('Processing basket item:', item);
        let position = products.findIndex(value => value.id == item.product_id);
        let info = products[position];
    
        if (info) {
            console.log('Found product for item:', info);
    
            // Use the first photo URL as the thumbnail, fallback to main photo if no photo list
            let thumbnailUrl = info.photoUrls && info.photoUrls.length > 0 
                ? info.photoUrls[0] 
                : info.photoUrl;
    
            let newItem = document.createElement('div');
            newItem.classList.add('item');
    
            newItem.innerHTML = `
                <div class="image"><img src="${thumbnailUrl}" alt="${info.name}" style="width: 100px; height: 100px; object-fit: cover;" /></div>
                <div class="name">${info.name}</div>
                <div class="size">Size: ${item.size}</div>
                <div class="quantity">Quantity: ${item.quantity}</div>
            `;
            listCheckout.appendChild(newItem);
    
            let orderItem = document.createElement('div');
            orderItem.innerHTML = `${info.name} - ${info.price}€ × ${item.quantity} = ${info.price * item.quantity}€`;
            orderSummary.appendChild(orderItem);
        } else {
            console.error('Product not found for basket item:', item);
        }
    });
    
    })
    .catch(error => {
      console.error('Error fetching products:', error);
    });
}

document.getElementById('checkout-form').addEventListener('submit', function(event) {
  console.log('Form submit triggered');
  event.preventDefault();

  const emailInput = document.getElementById('email');
  const zipInput = document.getElementById('zip');

  const isEmailValid = validateEmail(emailInput.value);
  const isZipValid = validZipCodes.includes(zipInput.value.trim());

  console.log('Email valid:', isEmailValid);
  console.log('Zip valid:', isZipValid);

  if (!isEmailValid) {
    console.error('Invalid email:', emailInput.value);
    document.getElementById('email-error').style.display = 'block';
    emailInput.classList.add('is-invalid');
    return;
  } else {
    document.getElementById('email-error').style.display = 'none';
    emailInput.classList.remove('is-invalid');
  }

  if (!isZipValid) {
    console.error('Invalid zip code:', zipInput.value);
    document.getElementById('zip-error').style.display = 'block';
    zipInput.classList.add('is-invalid');
    return;
  } else {
    document.getElementById('zip-error').style.display = 'none';
    zipInput.classList.remove('is-invalid');
  }

  const customerDetails = {
    firstName: document.getElementById('firstName').value,
    lastName: document.getElementById('lastName').value,
    company: document.getElementById('company').value,
    country: document.getElementById('country').value,
    address1: document.getElementById('address1').value,
    address2: document.getElementById('address2').value,
    city: document.getElementById('city').value,
    state: document.getElementById('state').value,
    zip: zipInput.value.trim(),
    phone: document.getElementById('phone').value,
    email: emailInput.value,
    orderNotes: document.getElementById('orderNotes').value,
  };

  console.log('Customer details:', customerDetails);

  localStorage.setItem('customerDetails', JSON.stringify(customerDetails));
  console.log('Redirecting to calculate_total.html');
  window.location.href = 'calculate_total';
});
